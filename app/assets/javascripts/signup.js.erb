// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//
// WARNING: THE FIRST BLANK LINE MARKS THE END OF WHAT'S TO BE PROCESSED, ANY BLANK LINE SHOULD
// GO AFTER THE REQUIRES BELOW.
//
//= require jquery
//= require jquery_ujs
//= require jquery.ui.autocomplete
//= require twitter/bootstrap
//= require mailcheck.min

// field validation
$(function() {

  // set input fields from DOM
  var email_field = $("input[name='email']");
  var password_field = $("input[name='password']");
  var name_field = $("input[name='name']");
  
  // handle signup button click
  $("#signup").click(function() {
  
    $("input").trigger("blur");
    
    if ($(".error").size() == 0) $("form").submit();
    
  });
  
  // validate first and last name
  name_field.on('blur', function() {
  
    $(this).parents(".control-group").removeClass("error");
    $(this).parents(".control-group").removeClass("success");
    $(this).siblings(".help-inline").html(""); 
    
    if (!nameFormatValid($(this).val())) {

      $(this).parents(".control-group").addClass("error");
      var suggestion_msg = "Please enter a first and last name";
      $(this).siblings(".help-inline").html(suggestion_msg); 
      
    } else {
    
      // capitalize the names
      var capitalized = $(this).val().capitalize();
      $(this).val(capitalized);
      
      // extract first name
      var pattern = /^([^\s]*)/;
      var first_name = pattern.exec($(this).val())[1];
      
      // show success message
      $(this).parents(".control-group").addClass("success");
      var suggestion_msg = "Hi, " + first_name + "!";
      $(this).siblings(".help-inline").html(suggestion_msg);   
        
    } 
    
  });
  
  // validate password
  password_field.on('blur', function() {
  
    $(this).parents(".control-group").removeClass("error");
    $(this).parents(".control-group").removeClass("success");
    $(this).siblings(".help-inline").html(""); 
    
    if (!passwordFormatValid($(this).val())) {

      $(this).parents(".control-group").addClass("error");
      var suggestion_msg = "Your Password must be at least 6 characters long";
      $(this).siblings(".help-inline").html(suggestion_msg); 
      
    } else {
    
      $(this).parents(".control-group").addClass("success");
      var suggestion_msg = "Your secret is safe with me!";
      $(this).siblings(".help-inline").html(suggestion_msg);   
        
    } 
    
  });
    
  // setup mailcheck on the email field
  email_field.on('blur', function() {
    $(this).mailcheck({
    
      // when there is a suggestion...
      suggested: function(element, suggestion) {
      
        // if entry is available and passes simple regex
        if (emailEntryValid(email_field)) {
        
          // show suggestions
          var suggestion_msg;
          email_field.parents(".control-group").addClass("success");
          suggestion_msg = "Did you mean ";
          suggestion_msg += "<a href='#' id='mailcheck-suggestion'>" + suggestion.full + "</a>?";
          email_field.siblings(".help-inline").html(suggestion_msg);
        
        }
        
      },
      
      // when there is no suggestion...
      empty: function(element) {
      
        // if entry is available and passes simple regex
        if (emailEntryValid(email_field)) {
                
          // good to go!       
          email_field.parents(".control-group").addClass("success");
          var suggestion_msg = "Looks good!";
          email_field.siblings(".help-inline").html(suggestion_msg); 
        
        }      
          
      }
      
    });
    
  });

  // handle mailcheck suggestion link click
  $("form").on("click", "#mailcheck-suggestion", function() {
  
    // if entry is available and passes simple regex
    if (emailEntryValid(email_field)) {
      
      // set the email field to the suggestion
      var suggestion = $(this).html();
      email_field.val(suggestion);
      email_field.parents(".control-group").addClass("success");
      email_field.siblings(".help-inline").html("Looks good!"); 
    
    }
        
  });  
  
});

// check for email format validity and also availability
function emailEntryValid(email_field) {

  // clear all error/warning styles and messages
  email_field.parents(".control-group").removeClass("error");
  email_field.parents(".control-group").removeClass("success");
  email_field.siblings(".help-inline").html(""); 
  
  // simple regex for the very basics
  if (!emailFormatValid(email_field.val())) {

    email_field.parents(".control-group").addClass("error");
    var suggestion_msg = "This doesn't look right...";
    email_field.siblings(".help-inline").html(suggestion_msg); 
    return false;
    
  }
   
  // ensure entry is not already taken (deferred for later build)
  /*email_field.siblings(".help-inline").html("Checking Availability..."); 
  if (emailTaken(email_field.val())) {    
    
    email_field.parents(".control-group").addClass("error")
    var suggestion_msg = "Looks like you already have an account! <a href='/login'>Login</a>";
    email_field.siblings(".help-inline").html(suggestion_msg); 
    return false;
    
  }
  email_field.siblings(".help-inline").html("");*/
  
  return true;
  
}

// capitalize function from mediacollege.com
String.prototype.capitalize = function(){
   return this.replace( /(^|\s)([a-z])/g , function(m,p1,p2){ return p1+p2.toUpperCase(); } );
  };

// email validation regex
function emailFormatValid(input) { 
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(input);
} 

// name validation regex
function nameFormatValid(input) { 
    var re = /(\s)/;
    return re.test(input);
} 

// password validation regex
function passwordFormatValid(input) { 
    var re = /(.{6,})/;
    return re.test(input);
} 

// Google Analytics
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-32538435-2']);
_gaq.push(['_trackPageview']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

// Mixpanel 
(function(c,a){window.mixpanel=a;var b,d,h,e;b=c.createElement("script");
b.type="text/javascript";b.async=!0;b.src=("https:"===c.location.protocol?"https:":"http:")+
'//cdn.mxpnl.com/libs/mixpanel-2.1.min.js';d=c.getElementsByTagName("script")[0];
d.parentNode.insertBefore(b,d);a._i=[];a.init=function(b,c,f){function d(a,b){
var c=b.split(".");2==c.length&&(a=a[c[0]],b=c[1]);a[b]=function(){a.push([b].concat(
Array.prototype.slice.call(arguments,0)))}}var g=a;"undefined"!==typeof f?g=a[f]=[]:
f="mixpanel";g.people=g.people||[];h=['disable','track','track_pageview','track_links',
'track_forms','register','register_once','unregister','identify','name_tag',
'set_config','people.identify','people.set','people.increment'];for(e=0;e<h.length;e++)d(g,h[e]);
a._i.push([b,c,f])};a.__SV=1.1;})(document,window.mixpanel||[]);
mixpanel.init("<%= Jetdeck::Application.config.mixpanel_token %>");

